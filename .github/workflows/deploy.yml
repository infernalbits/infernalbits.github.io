# Build and Deploy to GitHub Pages (username.github.io)
name: Build and Deploy

on:
  # Runs on pushes to source branch
  push:
    branches: ["source"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions to allow pushing to main branch
permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source branch
        uses: actions/checkout@v4
        with:
          ref: source

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build for GitHub Pages
        run: |
          # Build for root path (user pages)
          npx vite build --base=/
          # List built files (will be in dist/public/ as per vite.config.ts)
          ls -la dist/public/

      - name: Deploy to main branch
        run: |
          # Configure git
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

          # Debug: Check what was actually built
          echo "=== Checking build output ==="
          find . -name "dist" -type d
          ls -la dist/ || echo "dist/ doesn't exist"
          ls -la dist/public/ || echo "dist/public/ doesn't exist"

          # Verify build files exist
          if [ ! -d "dist/public" ] || [ -z "$(ls -A dist/public)" ]; then
            echo "ERROR: No files found in dist/public/"
            exit 1
          fi

          # Create temp directory OUTSIDE the git working tree
          mkdir -p /tmp/deploy_files

          # Copy built files to temp directory
          cp -r dist/public/* /tmp/deploy_files/
          echo "Files copied to /tmp/deploy_files successfully"

          # Add 404.html for SPA routing
          cp /tmp/deploy_files/index.html /tmp/deploy_files/404.html

          # Switch to main branch (this will clear working directory)
          git checkout -B main

          # Remove all files except .git
          find . -name ".git" -prune -o -type f -exec rm -f {} +
          find . -name ".git" -prune -o -type d -empty -exec rmdir {} + 2>/dev/null || true

          # Copy built files from temp to root
          cp -r /tmp/deploy_files/* .

          # Clean up temp directory
          rm -rf /tmp/deploy_files

          # Add and commit all files
          git add .
          git commit -m "Deploy InfernalBits coming soon page"

          # Push to main branch
          git push origin main --force
